# Generated by Django 2.2 on 2019-04-18 19:56

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('Tick_server', '0004_salesman'),
    ]

    operations = [
        migrations.CreateModel(
            name = 'CheckBoxOption',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('answer_text', models.CharField(max_length = 100)),
            ],
        ),
        migrations.CreateModel(
            name = 'City',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('name', models.CharField(max_length = 50)),
            ],
        ),
        migrations.CreateModel(
            name = 'Code4Digit',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('phone_number', models.CharField(max_length = 11)),
                ('code', models.CharField(max_length = 4)),
            ],
        ),
        migrations.CreateModel(
            name = 'LinearScalePoll',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('importance', models.IntegerField()),
                ('remaining_time', models.DateTimeField()),
                ('text', models.TextField()),
                ('choices_count', models.IntegerField()),
                ('start', models.IntegerField()),
                ('step', models.IntegerField()),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name = 'ParagraphPoll',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('importance', models.IntegerField()),
                ('remaining_time', models.DateTimeField()),
                ('text', models.TextField()),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name = 'Shop',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('address', models.TextField(blank = True)),
                ('business_license', models.ImageField(blank = True, upload_to = '')),
                ('location', models.CharField(max_length = 50)),
                ('name', models.CharField(max_length = 50)),
                ('picture', models.ImageField(blank = True, upload_to = '')),
            ],
        ),
        migrations.CreateModel(
            name = 'ShopKind',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('name', models.CharField(max_length = 50)),
            ],
        ),
        migrations.CreateModel(
            name = 'ShortAnswerPoll',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('importance', models.IntegerField()),
                ('remaining_time', models.DateTimeField()),
                ('text', models.TextField()),
                ('shop', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'Tick_server.Shop')),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name = 'ShortAnswerPollAnswer',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('completed', models.BooleanField(default = False)),
                ('answer_text', models.CharField(max_length = 100)),
                ('customer', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                               related_name = 'short_answer_poll_answer', to = 'Tick_server.Customer')),
                ('poll', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                           related_name = 'short_answer_poll_answer',
                                           to = 'Tick_server.ShortAnswerPoll')),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name = 'shop',
            name = 'shop_kind',
            field = models.ManyToManyField(related_name = 'shop', to = 'Tick_server.ShopKind'),
        ),
        migrations.CreateModel(
            name = 'ParagraphPollAnswer',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('completed', models.BooleanField(default = False)),
                ('answer_text', models.TextField()),
                ('customer', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                               related_name = 'paragraph_poll_answer', to = 'Tick_server.Customer')),
                ('poll', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                           related_name = 'paragraph_poll_answer', to = 'Tick_server.ParagraphPoll')),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name = 'paragraphpoll',
            name = 'shop',
            field = models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'Tick_server.Shop'),
        ),
        migrations.CreateModel(
            name = 'MultipleChoicePoll',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('importance', models.IntegerField()),
                ('remaining_time', models.DateTimeField()),
                ('text', models.TextField()),
                ('shop', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'Tick_server.Shop')),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name = 'MultipleChoiceOption',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('answer_text', models.CharField(max_length = 100)),
                ('poll', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                           to = 'Tick_server.MultipleChoicePoll')),
            ],
        ),
        migrations.CreateModel(
            name = 'MultipleChoiceAnswer',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('completed', models.BooleanField(default = False)),
                ('customer', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                               related_name = 'multiple_choice_answer', to = 'Tick_server.Customer')),
                ('option', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                             related_name = 'multiple_choice_answer',
                                             to = 'Tick_server.MultipleChoiceOption')),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name = 'LinearScalePollAnswer',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('completed', models.BooleanField(default = False)),
                ('answer', models.IntegerField()),
                ('customer', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                               related_name = 'linear_scale_poll_answer', to = 'Tick_server.Customer')),
                ('poll', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE,
                                           related_name = 'linear_scale_poll_answer',
                                           to = 'Tick_server.LinearScalePoll')),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name = 'linearscalepoll',
            name = 'shop',
            field = models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'Tick_server.Shop'),
        ),
        migrations.CreateModel(
            name = 'Discount',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('active', models.BooleanField(default = False)),
                ('code', models.CharField(max_length = 5)),
                ('description', models.TextField(blank = True)),
                ('expire_date', models.DateField(default = django.utils.timezone.now)),
                ('percent', models.IntegerField(default = 5)),
                ('product_brand', models.CharField(max_length = 50, null = True)),
                ('product_id', models.CharField(max_length = 50, null = True)),
                ('product_name', models.CharField(max_length = 50, null = True)),
                ('product_barcode', models.ImageField(null = True, upload_to = '')),
                ('customer', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, related_name = 'discount',
                                               to = 'Tick_server.Customer')),
                ('shop', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, related_name = 'discount',
                                           to = 'Tick_server.Shop')),
            ],
        ),
        migrations.CreateModel(
            name = 'CheckBoxPollAnswer',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('completed', models.BooleanField(default = False)),
                ('customer',
                 models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, related_name = 'checkbox_poll_answer',
                                   to = 'Tick_server.Customer')),
                ('option',
                 models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, related_name = 'checkbox_poll_answer',
                                   to = 'Tick_server.CheckBoxOption')),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name = 'CheckBoxPoll',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('importance', models.IntegerField()),
                ('remaining_time', models.DateTimeField()),
                ('text', models.TextField()),
                ('shop', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'Tick_server.Shop')),
            ],
            options = {
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name = 'checkboxoption',
            name = 'poll',
            field = models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'Tick_server.CheckBoxPoll'),
        ),
        migrations.CreateModel(
            name = 'Branch',
            fields = [
                ('id',
                 models.AutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('name', models.CharField(max_length = 50)),
                ('shop', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'Tick_server.Shop')),
            ],
        ),
        migrations.AddField(
            model_name = 'customer',
            name = 'checkbox_poll_answers',
            field = models.ManyToManyField(through = 'Tick_server.CheckBoxPollAnswer',
                                           to = 'Tick_server.CheckBoxOption'),
        ),
        migrations.AddField(
            model_name = 'customer',
            name = 'linear_scale_poll_answers',
            field = models.ManyToManyField(through = 'Tick_server.LinearScalePollAnswer',
                                           to = 'Tick_server.LinearScalePoll'),
        ),
        migrations.AddField(
            model_name = 'customer',
            name = 'multiple_choice_poll_answers',
            field = models.ManyToManyField(through = 'Tick_server.MultipleChoiceAnswer',
                                           to = 'Tick_server.MultipleChoiceOption'),
        ),
        migrations.AddField(
            model_name = 'customer',
            name = 'paragraph_poll_answers',
            field = models.ManyToManyField(through = 'Tick_server.ParagraphPollAnswer',
                                           to = 'Tick_server.ParagraphPoll'),
        ),
        migrations.AddField(
            model_name = 'customer',
            name = 'short_answer_poll_answers',
            field = models.ManyToManyField(through = 'Tick_server.ShortAnswerPollAnswer',
                                           to = 'Tick_server.ShortAnswerPoll'),
        ),
        migrations.AddField(
            model_name = 'customuser',
            name = 'city',
            field = models.ForeignKey(blank = True, null = True, on_delete = django.db.models.deletion.CASCADE,
                                      to = 'Tick_server.City'),
        ),
    ]
